<Activity mc:Ignorable="sap sap2010" x:Class="VerifyPerformerQueue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:r="clr-namespace:RPA_COE_Analytics_Core;assembly=RPA COE Analytics Core" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_QueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_ConnectionString" Type="InArgument(x:String)" />
    <x:Property Name="in_IsApi" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_logLastModByVar" Type="InArgument(x:String)" />
    <x:Property Name="in_UseCaseName" Type="InArgument(x:String)" />
    <x:Property Name="in_UseCaseNameReal" Type="InArgument(x:String)" />
  </x:Members>
  <this:VerifyPerformerQueue.in_ConnectionString>
    <InArgument x:TypeArguments="x:String" />
  </this:VerifyPerformerQueue.in_ConnectionString>
  <this:VerifyPerformerQueue.in_IsApi>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:VerifyPerformerQueue.in_IsApi>
  <this:VerifyPerformerQueue.in_logLastModByVar>
    <InArgument x:TypeArguments="x:String" />
  </this:VerifyPerformerQueue.in_logLastModByVar>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1244,3169</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>VerifyPerformerQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>RPA_COE_Analytics_Core</x:String>
      <x:String>Google.Cloud.PubSub.V1</x:String>
      <x:String>Google.Protobuf</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="98">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>RPA COE Analytics Core</AssemblyReference>
      <AssemblyReference>Google.Cloud.PubSub.V1</AssemblyReference>
      <AssemblyReference>Google.Protobuf</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This sequence is going to Verify if there are any Queue items in IN PROGRESS/ABANDONE  status by the Bot(IP, Hostname, UserName), also is going to set the BM_INPUT to FAILED.&#xA;&#xA;Args&#xA;- in_QueueName {in} String // Orchestrator Queue Name to use.&#xA;- in_ConnectionString {in}  String // DB Conection String to use.&#xA;- in_IsApi {in} Boolean // Flag to determine if API call is used..&#xA;- in_logLastModByVar {in} String // Robot ID to use.&#xA;- in_UseCaseName {in} String // Project Name to use in Analytics.&#xA;- in_UseCaseNameReal {in} String // Project Name to use." DisplayName="VerifyPerformerQueue" sap:VirtualizedContainerService.HintSize="693,3104" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="QueueItems" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Logs the start of the process" DisplayName="Log Start" sap:VirtualizedContainerService.HintSize="631,172" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Verify Performer Queue: START&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:GetQueueItems Priority="{x:Null}" ContinueOnError="False" DisplayName="Get Queue Items - In Progress and Abandoned" FilterStrategy="Equals" sap:VirtualizedContainerService.HintSize="631,143" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="InProgress, Abandoned" QueueName="[in_QueueName]" Result="[QueueItems]">
      <ui:GetQueueItems.Duration>
        <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
      </ui:GetQueueItems.Duration>
      <ui:GetQueueItems.From>
        <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
      </ui:GetQueueItems.From>
      <ui:GetQueueItems.Reference>
        <InArgument x:TypeArguments="x:String" />
      </ui:GetQueueItems.Reference>
      <ui:GetQueueItems.Skip>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetQueueItems.Skip>
      <ui:GetQueueItems.TimeoutMS>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetQueueItems.TimeoutMS>
      <ui:GetQueueItems.To>
        <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
      </ui:GetQueueItems.To>
      <ui:GetQueueItems.Top>
        <InArgument x:TypeArguments="x:Int32" />
      </ui:GetQueueItems.Top>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetQueueItems>
    <ui:ForEach x:TypeArguments="ui:QueueItem" DisplayName="For Each - QueueItem" sap:VirtualizedContainerService.HintSize="631,2224" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[QueueItems]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="ui:QueueItem">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:QueueItem" Name="QueueItem" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Analyze Transaction" sap:VirtualizedContainerService.HintSize="597,2088" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="TransactionIdentifier" />
              <Variable x:TypeArguments="x:String" Name="BatId" />
              <Variable x:TypeArguments="sd:DataTable" Name="dt_Results" />
              <Variable x:TypeArguments="x:String" Name="LogError" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:MultipleAssign DisplayName="Multiple Assign - Transaction" sap:VirtualizedContainerService.HintSize="555,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
              <ui:MultipleAssign.AssignOperations>
                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[TransactionIdentifier]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[QueueItem.SpecificContent("Input ID").ToString.Trim]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[BatId]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">[QueueItem.SpecificContent("Batch ID").ToString.Trim]</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                    <ui:AssignOperation.To>
                      <OutArgument x:TypeArguments="x:String">[LogError]</OutArgument>
                    </ui:AssignOperation.To>
                    <ui:AssignOperation.Value>
                      <InArgument x:TypeArguments="x:String">Fatal error in the last execution</InArgument>
                    </ui:AssignOperation.Value>
                  </ui:AssignOperation>
                </scg:List>
              </ui:MultipleAssign.AssignOperations>
            </ui:MultipleAssign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get Items by batch id , input id and robot id" DisplayName="Get Items - DatabaseManager.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="555,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\Database\DatabaseManager.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_QueryName">selectVerifyBeingProcessByBot</InArgument>
                <InArgument x:TypeArguments="s:String[]" x:Key="in_ParamArray">[{TransactionIdentifier, BatId, in_logLastModByVar.Trim}]</InArgument>
                <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_QueryResults">[dt_Results]</OutArgument>
                <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsApi">[in_IsApi]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_ConnectionString">[in_ConnectionString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <If Condition="[dt_Results.RowCount&gt;0]" DisplayName="Items?" sap:VirtualizedContainerService.HintSize="555,1566" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence DisplayName="Failed Items" sap:VirtualizedContainerService.HintSize="521,1304" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="AnalyticsDictionary" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Set transactions to failed" sap:VirtualizedContainerService.HintSize="479,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Warn]" Message="[&quot;Set transactions in progress/abandone to failed&quot;]" />
                  <ui:SetTransactionStatus ServiceBaseAddress="{x:Null}" ContinueOnError="False" Details="[LogError]" DisplayName="Set Transaction Status to Failed" ErrorType="Application" sap:VirtualizedContainerService.HintSize="479,242" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Reason="[LogError]" Status="Failed" TransactionItem="[QueueItem]">
                    <ui:SetTransactionStatus.Analytics>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                    </ui:SetTransactionStatus.Analytics>
                    <ui:SetTransactionStatus.Output>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                    </ui:SetTransactionStatus.Output>
                    <ui:SetTransactionStatus.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:SetTransactionStatus.TimeoutMS>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:SetTransactionStatus>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Generate Log - DatabaseManager.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="479,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\Database\DatabaseManager.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_QueryName">bmInputUpdateFailed</InArgument>
                      <InArgument x:TypeArguments="s:String[]" x:Key="in_ParamArray">[{ "FAILED", BatId, TransactionIdentifier}]</InArgument>
                      <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_QueryResults" />
                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsApi">[in_IsApi]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_ConnectionString">[in_ConnectionString]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:MultipleAssign sap2010:Annotation.AnnotationText="AnalyticsDictionary -&gt; You can provide custom data. By default we are adding  transactionID.&#xA;&#xA;More info: https://equifax.atlassian.net/wiki/spaces/GLOB/pages/3130390512/2.+BigQuery+-+Structure#2.1-RPATransaction" DisplayName="INIT" sap:VirtualizedContainerService.HintSize="479,234" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[AnalyticsDictionary]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[AnalyticsDictionary("transactionID")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[TransactionIdentifier]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:MultipleAssign>
                  <r:Analytics_Application_Error_Transaction DisplayName="RPA Analytics Application Error Transaction" sap:VirtualizedContainerService.HintSize="479,294" sap2010:WorkflowViewState.IdRef="Analytics_Application_Error_Transaction_1" in_CurrentTransaction="[QueueItem]" in_CustomData="[AnalyticsDictionary]" in_ErrorMessage="[LogError]" in_UseCaseName="[in_UseCaseName]" in_UseCaseNameReal="[in_UseCaseNameReal]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <ui:ForEach.CurrentIndex>
        <OutArgument x:TypeArguments="x:Int32" />
      </ui:ForEach.CurrentIndex>
    </ui:ForEach>
    <ui:LogMessage sap2010:Annotation.AnnotationText="Logs the end of the process" DisplayName="Log End" sap:VirtualizedContainerService.HintSize="631,172" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Verify Performer Queue: END&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>