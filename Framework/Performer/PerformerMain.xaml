<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ErrorHandling" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_DefaultConfiguration" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_PerformerConfiguration" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1708,2258</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="29">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="88">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Performer Main - Transactional Bot. &#xA;This sequence corresponds to the Performer, which is essentially transactional. &#xA;&#xA;Args&#xA;- in_ErrorHandling {in} Dictionary with the error values.&#xA;- in_DefaultConfiguration {in} Dictionary with default values.&#xA;- in_PerformerConfiguration {in} Dictionary with the project values." DisplayName="PerformerMain" sap:VirtualizedContainerService.HintSize="1514,2193" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
      <Variable x:TypeArguments="ui:QueueItem" Name="CurrentTransaction" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">250,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">280,77.5 280,107.5</av:PointCollection>
        <x:Double x:Key="Height">2039</x:Double>
        <x:Double x:Key="Width">1480</x:Double>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID17</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID17" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">180,107.5</av:Point>
          <av:Size x:Key="ShapeSize">200,52</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">280,159.5 280,194</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Start" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Performer main sequence started...&quot;]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:LogMessage>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">180,194</av:Point>
              <av:Size x:Key="ShapeSize">200,259</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">280,453 280,503.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <TryCatch sap2010:Annotation.AnnotationText="This sequence checks the queue in the orchestrator based on the robot that is currently running. What it does is verify if any transaction is in &quot;IN PROGRESS/ABANDONE&quot; status, and if so, it marks it as FAILED in the database and in the Orchestrator. This allows the retry mechanism of the same queue to eventually either reprocess the item." DisplayName="Verify Queue - Performer" sap:VirtualizedContainerService.HintSize="200,259" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="VerifyPerformerQueue.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\Performer\VerifyPerformerQueue.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">[in_DefaultConfiguration("queueNamePerformer").ToString.Trim]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ConnectionString">[in_DefaultConfiguration("connectionStringDB").ToString.Trim]</InArgument>
                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsApi">[CBool(in_DefaultConfiguration("isAPI").ToString.Trim)]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_logLastModByVar">[in_DefaultConfiguration("logLastModByVar").ToString.Trim]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_UseCaseName">[in_DefaultConfiguration("analyticsUseCaseName").ToString.Trim]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_UseCaseNameReal">[in_DefaultConfiguration("projectName").ToString.Trim]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <ui:MultipleAssign DisplayName="Exception - Verify Queue" sap:VirtualizedContainerService.HintSize="479,240" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("stopForced")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">True</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("flowError")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">True</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorMessage")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorType")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[exception.GetType.ToString]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_21">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("currentStep")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">Verify Performer Queue</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">180,503.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">280,556.5 280,596.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ShouldStop DisplayName="Should Stop Perfomer" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ShouldStop>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID4" Condition="[ShouldStop]" DisplayName="Should Stop?" sap:VirtualizedContainerService.HintSize="75,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <av:Point x:Key="ShapeLocation">242,596.5</av:Point>
                      <av:Size x:Key="ShapeSize">75,87</av:Size>
                      <av:PointCollection x:Key="TrueConnector">242,640 130,640 130,773.5</av:PointCollection>
                      <av:PointCollection x:Key="FalseConnector">318,640 540,640 540,676.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">30,773.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,139</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">130,912.5 130,984</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <TryCatch sap2010:Annotation.AnnotationText="This sequences sends a message or notification in case the robot needs to stop due to a signal from the orchestrator." DisplayName="Send Should Stop notification" sap:VirtualizedContainerService.HintSize="200,139" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence DisplayName="Should Stop Message" sap:VirtualizedContainerService.HintSize="496,498" sap2010:WorkflowViewState.IdRef="Sequence_2">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="shouldStopMessage" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ReadTextFile File="{x:Null}" Content="[shouldStopMessage]" DisplayName="Read shouldStopBodyMessage File" FileName="Framework\Email\Templates\shouldStopBodyMessage.txt" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
                            <Assign DisplayName="Assign - shouldStopMessage" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[shouldStopMessage]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[shouldStopMessage.Replace("[Robot]", in_DefaultConfiguration("logLastModByVar").ToString.Trim )]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="EmailSender.xaml - Should Stop - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\Email\EmailSender.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[in_DefaultConfiguration("stopForcedSubjectMessage").ToString.Trim]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">[shouldStopMessage]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_Attachment">[String.Empty]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_SmtpServer">[in_DefaultConfiguration("emailServer").ToString.Trim]</InArgument>
                                <InArgument x:TypeArguments="x:Int32" x:Key="in_SmtpPort">[CInt(in_DefaultConfiguration("emailPort").ToString.Trim)]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_SenderName">[in_DefaultConfiguration("errorEmailFromName").ToString.Trim]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_SenderEmail">[in_DefaultConfiguration("errorEmailFrom").ToString.Trim]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_RecipientEmail">[in_DefaultConfiguration("errorEmailTo").ToString.Trim]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_BccEmail">[in_DefaultConfiguration("errorEmailBcc").ToString.Trim]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_CcEmail">[in_DefaultConfiguration("errorEmailCc").ToString.Trim]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,210" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <ui:LogMessage DisplayName="Should stop exception" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;(Should Stop) An error has occurred while trying to send the notification -&gt; &quot; + exception.Message]" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">30,984</av:Point>
                              <av:Size x:Key="ShapeSize">200,52</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="End" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Performer main sequence ended.&quot;]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowDecision x:Name="__ReferenceID6" Condition="[CBool(in_ErrorHandling(&quot;stopForced&quot;).ToString.Trim)]" DisplayName="Stop Forced?" sap:VirtualizedContainerService.HintSize="74,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">502.5,676.5</av:Point>
                          <av:Size x:Key="ShapeSize">74,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">502.5,720 390,720 390,773.5</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">577.5,720 680,720 680,773.52</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_6">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">290,773.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,124</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">390,897.5 390,1010 230,1010</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch sap2010:Annotation.AnnotationText="This sequences sends a notification in case the robot encounters a failure that prevents it from continuing." DisplayName="Send stop forced notification" sap:VirtualizedContainerService.HintSize="534,768" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Stop Forced Message" sap:VirtualizedContainerService.HintSize="496,498" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="stopForcedMessage" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ReadTextFile File="{x:Null}" Content="[stopForcedMessage]" DisplayName="Read stopForcedBodyMessage File" FileName="Framework\Email\Templates\stopForcedBodyMessage.txt" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_3" />
                                <Assign DisplayName="Assign - stopForcedMessage" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[stopForcedMessage]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[stopForcedMessage.Replace("[Robot]", in_DefaultConfiguration("logLastModByVar").ToString.Trim ).Replace("[Error_Message]", in_ErrorHandling("errorMessage").ToString.Trim).Replace("[XAML]", in_ErrorHandling("currentStep").ToString.Trim).Replace("[Process]", "performer")]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="EmailSender.xaml - Stop Forced - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\Email\EmailSender.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[in_DefaultConfiguration("stopForcedSubjectMessage").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">[stopForcedMessage]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_Attachment">[String.Empty]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_SmtpServer">[in_DefaultConfiguration("emailServer").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:Int32" x:Key="in_SmtpPort">[CInt(in_DefaultConfiguration("emailPort").ToString.Trim)]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_SenderName">[in_DefaultConfiguration("errorEmailFromName").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_SenderEmail">[in_DefaultConfiguration("errorEmailFrom").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_RecipientEmail">[in_DefaultConfiguration("errorEmailTo").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_BccEmail">[in_DefaultConfiguration("errorEmailBcc").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_CcEmail">[in_DefaultConfiguration("errorEmailCc").ToString.Trim]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:LogMessage DisplayName="Send stop forced notification exception" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;(stop forced) An error has occurred while trying to send the notification -&gt; &quot; + exception.Message]" />
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <FlowStep.Next>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">580,773.52</av:Point>
                              <av:Size x:Key="ShapeSize">200,229</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">680,1002.52 680,1056.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch sap2010:Annotation.AnnotationText="This sequence takes a transaction from the orchestrator, then marks it as &quot;being process&quot; in the database, and eventually retrieves the same transaction from the database to map all the values, or some necessary values, into the ProjectSpecificConfig dictionary for the process." DisplayName="Get Transaction" sap:VirtualizedContainerService.HintSize="200,229" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence DisplayName="Sequence - Get Transaction" sap:VirtualizedContainerService.HintSize="563,1293" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="sd:DataTable" Name="dt_Transaction" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:MultipleAssign DisplayName="INIT - Performer Configuration" sap:VirtualizedContainerService.HintSize="501,147" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                  <ui:MultipleAssign.AssignOperations>
                                    <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[in_PerformerConfiguration("batId")]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                      <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                        <ui:AssignOperation.To>
                                          <OutArgument x:TypeArguments="x:String">[in_PerformerConfiguration("transactionID")]</OutArgument>
                                        </ui:AssignOperation.To>
                                        <ui:AssignOperation.Value>
                                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                        </ui:AssignOperation.Value>
                                      </ui:AssignOperation>
                                    </scg:List>
                                  </ui:MultipleAssign.AssignOperations>
                                </ui:MultipleAssign>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetTransaction.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="501,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\Performer\GetTransaction.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">[in_DefaultConfiguration("queueNamePerformer").ToString.Trim]</InArgument>
                                    <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_CurrentTransaction">[CurrentTransaction]</OutArgument>
                                    <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dt_Results">[dt_Transaction]</OutArgument>
                                    <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsApi">[CBool(in_DefaultConfiguration("isAPI").ToString.Trim)]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_ConnectionString">[in_DefaultConfiguration("connectionStringDB").ToString.Trim]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_InputId">[in_PerformerConfiguration("transactionID")]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_BatchId">[in_PerformerConfiguration("batId")]</OutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_AnalyticsUseCaseName">[in_DefaultConfiguration("analyticsUseCaseName").ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="in_AnalyticsUseCaseNameReal">[in_DefaultConfiguration("projectName").ToString.Trim]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="out_startDateTime">[in_PerformerConfiguration("startDateTime")]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <ui:IfElseIf sap2010:Annotation.AnnotationText="Checks if the datatable contains results from previous steps." DisplayName="Check if there are results" sap:VirtualizedContainerService.HintSize="501,810" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                  <ui:IfElseIf.ConditionBlocks>
                                    <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                      <ui:IfElseIfBlock BlockType="If" Condition="[dt_Transaction.RowCount &gt; 0 and Not CurrentTransaction is Nothing]" DisplayName="Transaction found" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_1">
                                        <ui:IfElseIfBlock.Then>
                                          <Sequence DisplayName="Start Transaccion" sap:VirtualizedContainerService.HintSize="450,367" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:LogMessage DisplayName="Log Message - Start Transaction" sap:VirtualizedContainerService.HintSize="388,141" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[&quot;Starting Transaction: &quot; + CurrentTransaction.Reference.Trim + &quot;...&quot;]" />
                                            <ui:Comment DisplayName="Comment - Flags" sap:VirtualizedContainerService.HintSize="388,75" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Use a multiple assign activity to fill up the in Project Specific Config dictionary if needed" />
                                          </Sequence>
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                      <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Not CurrentTransaction is Nothing and dt_Transaction.RowCount = 0]" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
                                        <ui:IfElseIfBlock.Then>
                                          <Throw DisplayName="Throw - Unable to get transaction" Exception="[new Exception(&quot;Unable to pull data/transaction from database&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
                                        </ui:IfElseIfBlock.Then>
                                      </ui:IfElseIfBlock>
                                    </sc:BindingList>
                                  </ui:IfElseIf.ConditionBlocks>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:IfElseIf>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="567,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <ui:MultipleAssign DisplayName="Exception - Get Transaction" sap:VirtualizedContainerService.HintSize="479,240" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("stopForced")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">True</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("flowError")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">True</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorMessage")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorType")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[exception.GetType.ToString]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_22">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("currentStep")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">Get Transaction</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                          <FlowStep.Next>
                            <FlowDecision x:Name="__ReferenceID9" Condition="[CBool(in_ErrorHandling(&quot;flowError&quot;).ToString.Trim)]" DisplayName="Get Transaction Error?" sap:VirtualizedContainerService.HintSize="120,87" sap2010:WorkflowViewState.IdRef="FlowDecision_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <av:Point x:Key="ShapeLocation">620,1056.5</av:Point>
                                  <av:Size x:Key="ShapeSize">120,87</av:Size>
                                  <av:PointCollection x:Key="TrueConnector">620,1100 460,1100 460,1390.5</av:PointCollection>
                                  <av:PointCollection x:Key="FalseConnector">740,1100 787,1100 787,1166.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">360,1390.5</av:Point>
                                      <av:Size x:Key="ShapeSize">200,259</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">460,1649.5 460,1696.5</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch sap2010:Annotation.AnnotationText="This sequences manages the entire Error Handling section, which is primarily for sending notifications in case of an error. It controls or changes the status of transactions to &quot;Application Exception&quot; or &quot;Business Exception&quot; at the item level in the orchestrator and also updates the status in the database (BM_INPUT). Finally, it logs the event in the database (BM_LOG)." DisplayName="Error Handling" sap:VirtualizedContainerService.HintSize="200,259" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="ErrorHandling.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Framework\Performer\ErrorHandling.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_CurrentTransaction">[CurrentTransaction]</InArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_ErrorHandling">[in_ErrorHandling]</InOutArgument>
                                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_DefaultConfiguration">[in_DefaultConfiguration]</InArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_PerformerConfiguration">[in_PerformerConfiguration]</InOutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <ui:MultipleAssign DisplayName="Exception - Error Handling" sap:VirtualizedContainerService.HintSize="479,240" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                                            <ui:MultipleAssign.AssignOperations>
                                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("stopForced")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">True</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("flowError")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">True</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorMessage")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorType")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">[exception.GetType.ToString]</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_20">
                                                  <ui:AssignOperation.To>
                                                    <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("currentStep")]</OutArgument>
                                                  </ui:AssignOperation.To>
                                                  <ui:AssignOperation.Value>
                                                    <InArgument x:TypeArguments="x:String">Error Handling</InArgument>
                                                  </ui:AssignOperation.Value>
                                                </ui:AssignOperation>
                                              </scg:List>
                                            </ui:MultipleAssign.AssignOperations>
                                          </ui:MultipleAssign>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID10" Condition="[CBool(in_ErrorHandling(&quot;flowError&quot;).ToString.Trim)]" DisplayName="Error Handling Error?" sap:VirtualizedContainerService.HintSize="116,87" sap2010:WorkflowViewState.IdRef="FlowDecision_6" True="{x:Reference __ReferenceID1}">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <av:Point x:Key="ShapeLocation">402,1696.5</av:Point>
                                          <av:Size x:Key="ShapeSize">116,87</av:Size>
                                          <av:PointCollection x:Key="TrueConnector">402,1740 0,1740 0,529.5 180,529.5</av:PointCollection>
                                          <av:PointCollection x:Key="FalseConnector">518,1740 630,1740 630,1814</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <FlowDecision.False>
                                        <FlowStep x:Name="__ReferenceID11" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">530,1814</av:Point>
                                              <av:Size x:Key="ShapeSize">200,214</av:Size>
                                              <av:PointCollection x:Key="ConnectorLocation">530,1921 0,1921 0,529.5 180,529.5</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <TryCatch sap2010:Annotation.AnnotationText="In the Rollback Steps section, in case of an error, this is where all the steps are placed to return the process to its initial state. This is where components like Kill Process or Close Application are added, ensuring everything is closed to revert to a starting state." DisplayName="RollBack Steps" sap:VirtualizedContainerService.HintSize="200,214" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <TryCatch.Try>
                                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="RollBackSteps.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Framework\Performer\RollBackSteps.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_DefaultConfiguration">[in_DefaultConfiguration]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                            </TryCatch.Try>
                                            <TryCatch.Catches>
                                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="485,309" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ActivityAction x:TypeArguments="s:Exception">
                                                  <ActivityAction.Argument>
                                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                  </ActivityAction.Argument>
                                                  <ui:MultipleAssign DisplayName="Exception - Roll Back Steps" sap:VirtualizedContainerService.HintSize="479,240" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("stopForced")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">True</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("flowError")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">True</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorMessage")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorType")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">[exception.GetType.ToString]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("currentStep")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">RollBack Steps</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                </ActivityAction>
                                              </Catch>
                                            </TryCatch.Catches>
                                          </TryCatch>
                                          <FlowStep.Next>
                                            <x:Reference>__ReferenceID1</x:Reference>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.False>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowDecision x:Name="__ReferenceID12" Condition="[String.IsNullOrEmpty(in_PerformerConfiguration(&quot;transactionID&quot;).ToString.Trim)]" DisplayName="End Process?" sap:VirtualizedContainerService.HintSize="74,87" sap2010:WorkflowViewState.IdRef="FlowDecision_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <av:Point x:Key="ShapeLocation">750,1166.5</av:Point>
                                      <av:Size x:Key="ShapeSize">74,87</av:Size>
                                      <av:PointCollection x:Key="TrueConnector">750,1210 390,1210</av:PointCollection>
                                      <av:PointCollection x:Key="FalseConnector">825,1210 940,1210 940,1273.52</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <FlowDecision.True>
                                    <FlowStep x:Name="__ReferenceID13" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">190,1133</av:Point>
                                          <av:Size x:Key="ShapeSize">200,154</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">190,1210 130,1210 130,1036</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch sap2010:Annotation.AnnotationText="This final sequences sends a message. When there is nothing else to process, it sends an email indicating that there is no further processing to be done." DisplayName="Send completion email notification" sap:VirtualizedContainerService.HintSize="200,154" sap2010:WorkflowViewState.IdRef="TryCatch_8">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence DisplayName="Send Completion Email" sap:VirtualizedContainerService.HintSize="496,498" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="NoTransactionsMessage" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ReadTextFile File="{x:Null}" Content="[NoTransactionsMessage]" DisplayName="Read NoTransactions File" FileName="Framework\Email\Templates\NoTransactions.txt" sap:VirtualizedContainerService.HintSize="434,80" sap2010:WorkflowViewState.IdRef="ReadTextFile_4" />
                                            <Assign DisplayName="Assign - NoTransactionsMessage" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[NoTransactionsMessage]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[NoTransactionsMessage.Replace("[Robot]", in_DefaultConfiguration("logLastModByVar").ToString.Trim )]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="EmailSender.xaml - Send completion - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="434,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Framework\Email\EmailSender.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[in_DefaultConfiguration("noTransactionsSubjectMessage").ToString.Trim]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">[NoTransactionsMessage]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_Attachment">[String.Empty]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_SmtpServer">[in_DefaultConfiguration("emailServer").ToString.Trim]</InArgument>
                                                <InArgument x:TypeArguments="x:Int32" x:Key="in_SmtpPort">[CInt(in_DefaultConfiguration("emailPort").ToString.Trim)]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_SenderName">[in_DefaultConfiguration("successEmailFromName").ToString.Trim]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_SenderEmail">[in_DefaultConfiguration("successEmailFrom").ToString.Trim]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_RecipientEmail">[in_DefaultConfiguration("successEmailTo").ToString.Trim]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_BccEmail">[in_DefaultConfiguration("successEmailBcc").ToString.Trim]</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="in_CcEmail">[in_DefaultConfiguration("successEmailCc").ToString.Trim]</InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="400,210" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:LogMessage DisplayName="Exception - completion email" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;(Send Completion Email) Error Message: &quot; + exception.Message]" />
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <FlowStep.Next>
                                        <x:Reference>__ReferenceID0</x:Reference>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowDecision.True>
                                  <FlowDecision.False>
                                    <FlowStep x:Name="__ReferenceID14" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">840,1273.52</av:Point>
                                          <av:Size x:Key="ShapeSize">200,139</av:Size>
                                          <av:PointCollection x:Key="ConnectorLocation">940,1412.52 940,1442.52 940.5,1442.52 940.5,1476.5</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch sap2010:Annotation.AnnotationText="This part of the Star Performer Sequence is where all the steps from the previously defined &quot;to-be&quot; process in the PDD are implemented." DisplayName="StartPerformer" sap:VirtualizedContainerService.HintSize="200,139" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="StartPerformer.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Framework\Performer\StartPerformer.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_DefaultConfiguration">[in_DefaultConfiguration]</InArgument>
                                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_ErrorHandling">[in_ErrorHandling]</InOutArgument>
                                              <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="io_PerformerConfiguration">[in_PerformerConfiguration]</InOutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <ui:MultipleAssign DisplayName="Exception - StartPerformer" sap:VirtualizedContainerService.HintSize="479,178" sap2010:WorkflowViewState.IdRef="MultipleAssign_6">
                                                <ui:MultipleAssign.AssignOperations>
                                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_27">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("flowError")]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:String">True</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_25">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorMessage")]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_26">
                                                      <ui:AssignOperation.To>
                                                        <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorType")]</OutArgument>
                                                      </ui:AssignOperation.To>
                                                      <ui:AssignOperation.Value>
                                                        <InArgument x:TypeArguments="x:String">[exception.GetType.ToString]</InArgument>
                                                      </ui:AssignOperation.Value>
                                                    </ui:AssignOperation>
                                                  </scg:List>
                                                </ui:MultipleAssign.AssignOperations>
                                              </ui:MultipleAssign>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                      <FlowStep.Next>
                                        <FlowDecision x:Name="__ReferenceID15" Condition="[CBool(in_ErrorHandling(&quot;flowError&quot;).ToString.Trim)]" DisplayName="Start Performer Error?" sap:VirtualizedContainerService.HintSize="119,87" sap2010:WorkflowViewState.IdRef="FlowDecision_9" True="{x:Reference __ReferenceID2}">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <av:Point x:Key="ShapeLocation">880.5,1476.5</av:Point>
                                              <av:Size x:Key="ShapeSize">119,87</av:Size>
                                              <av:PointCollection x:Key="TrueConnector">880.5,1520 560,1520</av:PointCollection>
                                              <av:PointCollection x:Key="FalseConnector">999.5,1520 1120,1520</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <FlowDecision.False>
                                            <FlowStep x:Name="__ReferenceID16" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <av:Point x:Key="ShapeLocation">1120,1443</av:Point>
                                                  <av:Size x:Key="ShapeSize">200,154</av:Size>
                                                  <av:PointCollection x:Key="ConnectorLocation">1220,1443 1220,529.5 380,529.5</av:PointCollection>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch sap2010:Annotation.AnnotationText="This sequence essentially closes the transaction at the orchestrator level. It also closes the transaction at the database level (BM_INPUT), adds an event log (BM_LOG)." DisplayName="Close Transaction" sap:VirtualizedContainerService.HintSize="200,154" sap2010:WorkflowViewState.IdRef="TryCatch_10">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <TryCatch.Try>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CloseTransaction.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Framework\Performer\CloseTransaction.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_AnalyticsUseCaseName">[in_DefaultConfiguration("analyticsUseCaseName").ToString.Trim]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_AnalyticsUseCaseNameReal">[in_DefaultConfiguration("projectName").ToString.Trim]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_ConnectionString">[in_DefaultConfiguration("connectionStringDB").ToString.Trim]</InArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsApi">[CBool(in_DefaultConfiguration("isAPI").ToString.Trim)]</InArgument>
                                                      <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_CurrentTransaction">[CurrentTransaction]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">[in_DefaultConfiguration("queueNamePerformer").ToString.Trim]</InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="in_ProcessId">[CInt(in_DefaultConfiguration("processId").ToString.Trim)]</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="in_StartDate">[in_PerformerConfiguration("startDateTime").ToString.Trim]</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <ui:MultipleAssign DisplayName="Exception - CloseTransaction" sap:VirtualizedContainerService.HintSize="479,240" sap2010:WorkflowViewState.IdRef="MultipleAssign_8">
                                                        <ui:MultipleAssign.AssignOperations>
                                                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_31">
                                                              <ui:AssignOperation.To>
                                                                <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("stopForced")]</OutArgument>
                                                              </ui:AssignOperation.To>
                                                              <ui:AssignOperation.Value>
                                                                <InArgument x:TypeArguments="x:String">True</InArgument>
                                                              </ui:AssignOperation.Value>
                                                            </ui:AssignOperation>
                                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_32">
                                                              <ui:AssignOperation.To>
                                                                <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("flowError")]</OutArgument>
                                                              </ui:AssignOperation.To>
                                                              <ui:AssignOperation.Value>
                                                                <InArgument x:TypeArguments="x:String">True</InArgument>
                                                              </ui:AssignOperation.Value>
                                                            </ui:AssignOperation>
                                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_33">
                                                              <ui:AssignOperation.To>
                                                                <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorMessage")]</OutArgument>
                                                              </ui:AssignOperation.To>
                                                              <ui:AssignOperation.Value>
                                                                <InArgument x:TypeArguments="x:String">[exception.Message]</InArgument>
                                                              </ui:AssignOperation.Value>
                                                            </ui:AssignOperation>
                                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_34">
                                                              <ui:AssignOperation.To>
                                                                <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("errorType")]</OutArgument>
                                                              </ui:AssignOperation.To>
                                                              <ui:AssignOperation.Value>
                                                                <InArgument x:TypeArguments="x:String">[exception.GetType.ToString]</InArgument>
                                                              </ui:AssignOperation.Value>
                                                            </ui:AssignOperation>
                                                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_35">
                                                              <ui:AssignOperation.To>
                                                                <OutArgument x:TypeArguments="x:String">[in_ErrorHandling("currentStep")]</OutArgument>
                                                              </ui:AssignOperation.To>
                                                              <ui:AssignOperation.Value>
                                                                <InArgument x:TypeArguments="x:String">Close Transaction</InArgument>
                                                              </ui:AssignOperation.Value>
                                                            </ui:AssignOperation>
                                                          </scg:List>
                                                        </ui:MultipleAssign.AssignOperations>
                                                      </ui:MultipleAssign>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                              <FlowStep.Next>
                                                <x:Reference>__ReferenceID1</x:Reference>
                                              </FlowStep.Next>
                                            </FlowStep>
                                          </FlowDecision.False>
                                        </FlowDecision>
                                      </FlowStep.Next>
                                    </FlowStep>
                                  </FlowDecision.False>
                                </FlowDecision>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
    <x:Reference>__ReferenceID15</x:Reference>
    <x:Reference>__ReferenceID16</x:Reference>
  </Flowchart>
</Activity>